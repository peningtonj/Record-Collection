name: Build Multi-Platform Desktop Apps

on:
  # Only build on releases and manual triggers
  push:
    tags:
      - 'v*'  # Only build when you create version tags like v1.0.0
  pull_request:
    branches: [ main ]  # Build on PRs to test before merging
  workflow_dispatch: # Allow manual triggering from GitHub UI

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build Windows MSI
        run: ./gradlew packageMsi

      - name: Build Windows Distributable
        run: ./gradlew createDistributable

      - name: Upload Windows MSI
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: build/compose/binaries/main/msi/*.msi
          retention-days: 30

      - name: Upload Windows Distributable
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable
          path: build/compose/binaries/main/app/
          retention-days: 30

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build macOS DMG
        run: ./gradlew packageDmg

      - name: Build macOS Distributable
        run: ./gradlew createDistributable

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: build/compose/binaries/main/dmg/*.dmg
          retention-days: 30

      - name: Upload macOS Distributable
        uses: actions/upload-artifact@v4
        with:
          name: macos-portable
          path: build/compose/binaries/main/app/
          retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Linux DEB
        run: ./gradlew packageDeb

      - name: Build Linux Distributable
        run: ./gradlew createDistributable

      - name: Upload Linux DEB
        uses: actions/upload-artifact@v4
        with:
          name: linux-deb
          path: build/compose/binaries/main/deb/*.deb
          retention-days: 30

      - name: Upload Linux Distributable
        uses: actions/upload-artifact@v4
        with:
          name: linux-portable
          path: build/compose/binaries/main/app/
          retention-days: 30

  # Optional: Create a release when you push a tag
  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-msi/*.msi
            macos-dmg/*.dmg
            linux-deb/*.deb
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}