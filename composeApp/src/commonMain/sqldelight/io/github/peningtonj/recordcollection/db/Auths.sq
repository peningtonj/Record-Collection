CREATE TABLE auths (
    -- Use a single row approach with id=1
    id INTEGER PRIMARY KEY NOT NULL DEFAULT 1,
    -- Fields matching AccessToken
    access_token TEXT NOT NULL,
    token_type TEXT NOT NULL,
    scope TEXT NOT NULL,
    expires_in INTEGER NOT NULL,
    refresh_token TEXT NOT NULL,
    -- Additional field for token expiration tracking
    expires_at INTEGER NOT NULL
);

getStoredToken:
SELECT * FROM auths WHERE id = 1;

insertOrUpdateToken:
INSERT OR REPLACE INTO auths (
    id,
    access_token,
    refresh_token,
    token_type,
    scope,
    expires_in,
    expires_at
) VALUES :auths;

deleteToken:
DELETE FROM auths WHERE id = 1;

hasRefreshToken:
SELECT EXISTS(SELECT 1 FROM auths WHERE refresh_token IS NOT NULL AND refresh_token != '');

getRefreshToken:
SELECT refresh_token FROM auths WHERE id = 1;
