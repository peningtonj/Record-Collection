CREATE TABLE albums (
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    primary_artist TEXT NOT NULL,
    artists TEXT NOT NULL,
    release_date TEXT,
    total_tracks INTEGER NOT NULL,
    spotify_uri TEXT NOT NULL,
    added_at TEXT NOT NULL,
    album_type TEXT NOT NULL,
    images TEXT NOT NULL,
    updated_at INTEGER NOT NULL,
    external_ids TEXT,
    release_group_id TEXT,
    in_library INTEGER NOT NULL
);

selectAll:
SELECT *
FROM albums
ORDER BY added_at DESC;

insert:
INSERT OR REPLACE INTO albums(
    id,
    name,
    primary_artist,
    artists,
    release_date,
    total_tracks,
    spotify_uri,
    added_at,
    album_type,
    images,
    updated_at,
    external_ids,
    in_library,
    release_group_id
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

deleteAll:
DELETE FROM albums;

getCount:
SELECT COUNT(*) FROM albums;

getLatest:
SELECT * FROM albums
ORDER BY added_at DESC
LIMIT 1;

getByReleaseDate:
SELECT * FROM albums
WHERE release_date LIKE '%' || :year || '%';

getAllArtists:
SELECT primary_artist
FROM albums
GROUP BY primary_artist
ORDER BY COUNT(*) DESC;

getAlbumsByArtist:
SELECT *
FROM albums
WHERE artists LIKE '%' || :artist || '%';

getAlbumById:
SELECT *
FROM albums
WHERE id = :albumId;

selectAllAlbumsInLibrary:
SELECT *
FROM albums
WHERE in_library = 1;

getLibraryCount:
SELECT COUNT(*) FROM albums
WHERE in_library = 1;

updateInLibraryStatus:
UPDATE albums
SET in_library = :inLibrary
WHERE id = :albumId;

updateReleaseGroupId:
UPDATE albums
SET release_group_id = :release_group_id
WHERE id = :albumId;

selectAlbumsByReleaseId:
SELECT *
FROM albums
WHERE release_group_id = :release_group_id;

selectAlbumByNameAndArtist:
SELECT *
FROM albums
WHERE name = :name
AND primary_artist = :primary_artist
ORDER BY in_library DESC, added_at DESC
LIMIT 1;
